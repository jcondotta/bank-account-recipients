name: Microservice CI with LocalStack Docker Cache and Integration Tests

on:
  push:
    branches:
      - main

jobs:
  localstack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK with Maven cache
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: maven  # Automatically caches Maven dependencies

      - name: Cache LocalStack image
        id: cache-localstack
        uses: actions/cache@v3
        with:
          path: /tmp/localstack-cache
          key: ${{ runner.os }}-localstack-3.7.0

      - name: Load LocalStack Docker image from cache
        if: steps.cache-localstack.outputs.cache-hit == 'true'
        run: docker load -i /tmp/localstack-cache/localstack.tar

      - name: Log and Pull LocalStack Docker image if not cached
        if: steps.cache-localstack.outputs.cache-hit != 'true'
        run: |
          echo "LocalStack image not found in cache, pulling from Docker Hub..."
          docker pull localstack/localstack:3.7.0
          
          echo "Saving LocalStack image to cache..."
          mkdir -p /tmp/localstack-cache
          docker save localstack/localstack:3.7.0 -o /tmp/localstack-cache/localstack.tar

      - name: Start LocalStack manually
        run: |
          echo "Starting LocalStack container..."
          docker run -d --name localstack \
            -p 127.0.0.1:4566:4566 \
            -p 127.0.0.1:4510-4513:4510-4513 \
            -e SERVICES=dynamodb \
            localstack/localstack:3.7.0

          echo "Waiting for LocalStack to be fully ready..."

          MAX_ATTEMPTS=30
          SLEEP_TIME=10

          # Verify that the container is running
          docker ps -a

          for i in $(seq 1 $MAX_ATTEMPTS); do
            echo "Checking LocalStack health... attempt #$i"

            # Verify that ports are open and accessible
            netstat -tuln | grep 4566 || echo "Port 4566 is not open yet"

            # Capture the curl response and check if it's valid JSON before parsing
            HEALTH_RESPONSE=$(curl -s http://localhost:4566/health)

            # Print the health response for debugging
            echo "Health response: $HEALTH_RESPONSE"

            # Ensure the response is valid JSON before using jq
            if echo "$HEALTH_RESPONSE" | jq empty > /dev/null 2>&1; then
              HEALTH_STATUS=$(echo "$HEALTH_RESPONSE" | jq -r .services.dynamodb)

              if [ "$HEALTH_STATUS" == "running" ]; then
                echo "LocalStack DynamoDB is running!"
                break
              fi
            else
              echo "Invalid JSON response: $HEALTH_RESPONSE"
            fi

            echo "LocalStack not ready yet. Sleeping for $SLEEP_TIME seconds..."
            sleep $SLEEP_TIME
          done

          if [ "$HEALTH_STATUS" != "running" ]; then
            echo "LocalStack failed to start after $MAX_ATTEMPTS attempts."
            docker logs localstack
            exit 1
          fi
      

      - name: Build and run unit tests
        run: mvn clean test
