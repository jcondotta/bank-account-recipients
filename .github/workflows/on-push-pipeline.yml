name: Microservice CI with LocalStack and Docker Cache

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      LOCALSTACK_VERSION: "3.7.0"
      LAMBDA_FUNCTION_NAME: "bank-account-recipients-java-17"
      ARTIFACT_NAME: "bank-account-recipients-0.1.jar"
      AWS_REGION: "eu-west-3"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK with Maven cache
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: maven

      # Cache LocalStack image
      - name: Cache LocalStack image
        id: cache-localstack
        uses: actions/cache@v3
        with:
          path: ~/.docker-cache/localstack
          key: ${{ runner.os }}-localstack-${{ env.LOCALSTACK_VERSION }}

      # Load or Pull LocalStack Docker image
      - name: Get LocalStack Docker Image
        run: |
          if [ -f ~/.docker-cache/localstack/localstack.tar ]; then
            echo "Loading LocalStack Docker image from cache..."
            docker load -i ~/.docker-cache/localstack/localstack.tar
          else
            echo "LocalStack image not found in cache, pulling from Docker Hub..."
            docker pull localstack/localstack:${{ env.LOCALSTACK_VERSION }}
          
            echo "Saving LocalStack image to cache..."
            mkdir -p ~/.docker-cache/localstack
            docker save localstack/localstack:${{ env.LOCALSTACK_VERSION }} -o ~/.docker-cache/localstack/localstack.tar
          fi

      # Cache Ryuk image
      - name: Cache Ryuk image
        id: cache-ryuk
        uses: actions/cache@v3
        with:
          path: ~/.docker-cache/ryuk
          key: ${{ runner.os }}-ryuk-0.7.0

      # Load or Pull Ryuk Docker image
      - name: Get Ryuk Docker Image
        run: |
          if [ -f ~/.docker-cache/ryuk/ryuk.tar ]; then
            echo "Loading Ryuk Docker image from cache..."
            docker load -i ~/.docker-cache/ryuk/ryuk.tar
          else
            echo "Ryuk image not found in cache, pulling from Docker Hub..."
            docker pull testcontainers/ryuk:0.7.0
          
            echo "Saving Ryuk image to cache..."
            mkdir -p ~/.docker-cache/ryuk
            docker save testcontainers/ryuk:0.7.0 -o ~/.docker-cache/ryuk/ryuk.tar
          fi

      - name: Start LocalStack container
        run: |
          echo "Starting LocalStack container..."
          docker run -d --name localstack \
            -p 127.0.0.1:4566:4566 \
            -e SERVICES=dynamodb \
            localstack/localstack:${{ env.LOCALSTACK_VERSION }}

      # Run mvn verify to build and test the project, which also packages the JAR
      - name: Build, run tests, and package
        run: mvn verify --batch-mode --fail-at-end

      # Configure AWS credentials for deployment
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Deploy the JAR to AWS Lambda
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://target/${{ env.ARTIFACT_NAME }}
